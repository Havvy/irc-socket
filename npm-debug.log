0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/havvy/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
12 verbose folder .
13 info prepublish irc-socket@2.2.0-pre2
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/havvy/.npm/1f1177db-tar.lock
16 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
17 verbose lock tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz /home/havvy/.npm/8c92ca01-4800-0-10358571750111878-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
21 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
22 verbose tar unpack /home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
23 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
24 verbose lock tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package /home/havvy/.npm/4e7a0f9b-4800-0-10358571750111878-package.lock
25 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
26 verbose lock tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz /home/havvy/.npm/8c92ca01-4800-0-10358571750111878-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry README.md
30 silly gunzTarPerm extractEntry LICENSE
31 silly gunzTarPerm extractEntry irc-socket.js
32 silly gunzTarPerm extractEntry spec/irc-socket.spec.js
33 silly gunzTarPerm extractEntry spec/mock-generic-socket.js
34 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
35 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
36 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
37 silly lockFile 8c92ca01-4800-0-10358571750111878-tmp-tgz tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/tmp.tgz
38 verbose tar pack [ '/home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz',
38 verbose tar pack   '/home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package' ]
39 verbose tarball /home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
40 verbose folder /home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
41 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
42 verbose lock tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package /home/havvy/.npm/4e7a0f9b-4800-0-10358571750111878-package.lock
43 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
44 verbose lock tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz /home/havvy/.npm/53c991c6-rc-socket-2-2-0-pre2-package-tgz.lock
45 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
46 silly lockFile 4e7a0f9b-4800-0-10358571750111878-package tar:///home/havvy/tmp/npm-11362-Oen08iPE/1390009314800-0.10358571750111878/package
47 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
48 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
49 silly lockFile ca19564a-pm-irc-socket-2-2-0-pre2-package /home/havvy/.npm/irc-socket/2.2.0-pre2/package
50 verbose lock /home/havvy/.npm/irc-socket/2.2.0-pre2/package /home/havvy/.npm/ca19564a-pm-irc-socket-2-2-0-pre2-package.lock
51 silly lockFile ca19564a-pm-irc-socket-2-2-0-pre2-package /home/havvy/.npm/irc-socket/2.2.0-pre2/package
52 silly lockFile ca19564a-pm-irc-socket-2-2-0-pre2-package /home/havvy/.npm/irc-socket/2.2.0-pre2/package
53 verbose tar unpack /home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
54 silly lockFile e9339896-pm-irc-socket-2-2-0-pre2-package tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package
55 verbose lock tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package /home/havvy/.npm/e9339896-pm-irc-socket-2-2-0-pre2-package.lock
56 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
57 verbose lock tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz /home/havvy/.npm/53c991c6-rc-socket-2-2-0-pre2-package-tgz.lock
58 silly gunzTarPerm modes [ '755', '644' ]
59 silly gunzTarPerm extractEntry package.json
60 silly gunzTarPerm extractEntry README.md
61 silly gunzTarPerm extractEntry LICENSE
62 silly gunzTarPerm extractEntry irc-socket.js
63 silly gunzTarPerm extractEntry spec/irc-socket.spec.js
64 silly gunzTarPerm extractEntry spec/mock-generic-socket.js
65 silly lockFile e9339896-pm-irc-socket-2-2-0-pre2-package tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package
66 silly lockFile e9339896-pm-irc-socket-2-2-0-pre2-package tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package
67 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
68 silly lockFile 53c991c6-rc-socket-2-2-0-pre2-package-tgz tar:///home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz
69 verbose chmod /home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz 644
70 verbose chown /home/havvy/.npm/irc-socket/2.2.0-pre2/package.tgz [ 1000, 100 ]
71 silly lockFile 3a52ce78- .
72 silly lockFile 3a52ce78- .
73 silly publish { name: 'irc-socket',
73 silly publish   version: '2.2.0-pre2',
73 silly publish   description: 'Simple IRC Socket for usage with IRC libraries.',
73 silly publish   main: 'irc-socket.js',
73 silly publish   scripts: { test: 'jasmine-node spec --verbose' },
73 silly publish   repository: { type: 'git', url: 'https://github.com/Havvy/irc-socket.git' },
73 silly publish   keywords: [ 'irc', 'socket' ],
73 silly publish   author: { name: 'Ryan S. Scheel', url: 'havvy' },
73 silly publish   contributors:
73 silly publish    [ { name: 'Ricki Hastings',
73 silly publish        email: 'ricki@ircanywhere.com',
73 silly publish        url: 'http://ircanywhere.com' },
73 silly publish      { name: 'Fionn Kelleher',
73 silly publish        email: 'me@fionn.co',
73 silly publish        url: 'http://fionn.co' } ],
73 silly publish   license: 'BSD',
73 silly publish   readme: 'Simple IRC Socket - handles communication between an IRC server and consumers.\n\nThe socket is a thin wrapper around a generic socket, \n\n## Installation ##\n\n```\nnpm install irc-socket\n```\n\n## Instantiation ##\n\n```javascript\nvar IrcSocket = require(\'simple-irc-socket\');\nvar myConnection = IrcSocket({\n    server: \'irc.example.net\',\n    port: 6667,\n    ipv6: false,\n    localAddress: undefined,  // See net.Socket documents.\n    secure: false,\n    rejectUnauthorized: false,\n    nickname: \'aBot\',\n    username: \'node\',\n    realname: \'Node Simple Socket\',\n    password: \'server-password\',\n    capab: true\n});\n```\n\nThe following fields are required:\n\n* server\n* port\n* nickname\n* realname\n\nIf `capab: true` is passed to the configuration object the socket will send `CAP LS` first to initiate a capabilities negotiation.\n\nIf `ipv6` is true, the socket will connect over ipv6. If false, it will connect over ipv4. The `localAddress` field is for binding\nwhat IP you connect as. If you don\'t know that that means, don\'t define it.\n\nIf `secure` is true, then the connection will be over TLS. See `Known Issues` below about using this. `rejectUnauthorized` is `false`\nby default. If your irc server has a valid ssl certificate, you can flip this to true.\n\n### Dependency Management ###\n\nA simple irc socket uses a `net.Socket` socket by default. You can pass a\nseperate generic socket instead in the second parameter.\n\nIf you pass `secure: true` in the network configuration object, this parameter is ignored.\n\n## Starting and Closing the Socket ##\n\n```javascript\nvar myConnection = IrcSocket(...);\nmySocket.once(\'ready\', function () {\n    mySocket.end();\n}\nmySocket.connect();\n```\n\n## Writing to the Server ##\nTo send messages to the server, use socket.raw(). It accepts either a\nstring or an array of Strings. When an array is passed, elments containing\nwhitespaces will be interpreted as a trailing parameter, else the element\nwill be left as is. The end result will be joined to a String.\nThe message \'\'\'must\'\'\' follow the \n[IRC protocol](https://irc-wiki.org/RFC 1459).\n\n```javascript\nvar details = {...};\nvar myConnection = Ircsocket(details);\n\nmySocket.connect();\nmySocket.once(\'ready\', function () {\n    // Using a string.\n    mySocket.raw("JOIN #biscuits");\n}\n\nmySocket.on(\'data\', function (message) {\n    message = message.split(" ");\n\n    // Numeric 333 is sent when a user joins a channel.\n    if (message[1] === "333" &&\n        message[2] === details.nick &&\n        message[3] === "#biscuits")\n    {\n        // Using an array instead of a string.\n        mySocket.raw(["PRIVMSG", "#biscuits", ":Hello world."])\n    }\n});\n\nmySocket.on(\'data\', function (message) {\n    // This is sent when you do /quit too.\n    if (message.slice(0, 5) === "ERROR") {\n        mySocket.end();\n    }\n})\n```\n\nThe raw method does not allow the usage of newline characters. This is\nmostly a security concern, so that if the user of the Socket doesn\'t\nvalidate input, an evil user can\'t send a command causing the bot to quit:\n\n```\n<eviluser>!say SUCKAS \\nQUIT :Mua ha ha\n```\n\n## Reading from the Server ##\n\nYou do not need to handle PING messages. They are filtered from the messages\nemitted by the socket.\n\nAll other messages are emitted via a \'data\' event. Receiving callbacks to this\nevent will receive the message as the first parameter.\n\nExamples of reading messages are in the previous example. Messages generally\nlook like the following:\n\n```\n:irc.uk.mibbit.net 376 Havvy :End of /MOTD command.\n:NyanCat!Mibbit@mib-FFFFFFFF.redacted.com QUIT :Quit: http://www.mibbit.com ajax IRC Client\nERROR :Closing Link: Havvy[127-00-00-00.redacted.com] (Quit: I got the messages I want.)\n```\n\n## Utility Methods ##\n\n### isConnected() ###\n\nThis method will return true when the socket is started, but not ended. It\nwill otherwise return false.\n\n### getRealname() ###\n\nThis method returns the realname (also called gecos) of the connection.\n\n### setTimeout(timeout, [callback]) ###\n\nAs per the implementation socket. See\n[Node documentation](http://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback)\nfor details.\n\n## Events ##\n\nThe basic-irc-socket is an event emitter. It emits five events.\n\n+ ready(): Once the first 001 message has been acknowledged.\n+ data(message: String): Every message (including the 001) from the\nsender (inclusive) the the newline (exclusive).\n+ close(): Once the implementing socket has been closed.\n+ timeout(): When the implementing socket times out.\n+ end(): Once the implementing socket emits an \'end\' event.\n\n## Testing ##\n\nInstall jasmine-node globally, and then test via npm.\n\n```\nnpm install -g jasmine-node\nnpm test\n```\n\n## Legacy ##\n\nInitialization configuration object can also take `nick` or `user` instead of `nickname` or `username`.\n\n## Known Issues ##\n\nThe socket you pass gets ignored if you pass `secure: true` in the network config.\n\nLikewise, the ipv6 and localAddress properties are also ignored with secure connections.\n\n## See Also\n\nThe [irc-message](https://github.com/expr/irc-message) module will quickly parse the strings you pass into objects.\n\nFor a full IRC Bot framework, take a look at [Tennu](https://tennu.github.io).\n\nFor long-running IRC Clients, take a look at [IRC Factory](https://github.com/ircanywhere/irc-factory).\n',
73 silly publish   readmeFilename: 'README.md',
73 silly publish   bugs: { url: 'https://github.com/Havvy/irc-socket/issues' },
73 silly publish   homepage: 'https://github.com/Havvy/irc-socket',
73 silly publish   _id: 'irc-socket@2.2.0-pre2',
73 silly publish   dist: { shasum: '963876fb44832035453c9599e309561b86ac8a2c' },
73 silly publish   _from: '.' }
74 verbose url raw irc-socket
75 verbose url resolving [ 'https://registry.npmjs.org/', './irc-socket' ]
76 verbose url resolved https://registry.npmjs.org/irc-socket
77 info trying registry request attempt 1 at 17:41:55
78 http PUT https://registry.npmjs.org/irc-socket
79 http 409 https://registry.npmjs.org/irc-socket
80 verbose url raw irc-socket
81 verbose url resolving [ 'https://registry.npmjs.org/', './irc-socket' ]
82 verbose url resolved https://registry.npmjs.org/irc-socket
83 info trying registry request attempt 1 at 17:41:55
84 http GET https://registry.npmjs.org/irc-socket
85 http 200 https://registry.npmjs.org/irc-socket
86 error publish fail Cannot publish over existing version.
86 error publish fail Update the 'version' field in package.json and try again.
86 error publish fail
86 error publish fail If the previous version was published in error, see:
86 error publish fail     npm help unpublish
86 error publish fail
86 error publish fail To automatically increment version numbers, see:
86 error publish fail     npm help version
87 error System Linux 3.10.18-1-CHAKRA
88 error command "/usr/bin/node" "/usr/bin/npm" "publish"
89 error cwd /home/havvy/tennu/socket
90 error node -v v0.10.24
91 error npm -v 1.3.21
92 error code EPUBLISHCONFLICT
93 verbose exit [ 1, true ]
